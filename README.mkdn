# Jumpup
[![RubyGems][gem_version_badge]][ruby_gems]

Jumpup is a gem that provides a set of tasks to automate all steps of a [synchronous continuous integration][sci] process for [Ruby on Rails][ror] apps, that is, [continuous integration][ci] without a server such as [Travis][travis].

## Why?

Because that's the way [we][helabs] like it!

## Installation

Add the gem to the `development` section of your `Gemfile` and run `bundle install`:

```ruby
group :development do
  gem 'jumpup'
end
```

## Usage

After installing the gem, you'll need to configure the set of tasks you'll want to run as part of your integration process before using it. The configuration is done by setting an array of Rake task names as the `INTEGRATION_TASKS` constant on your `lib/tasks/jumpup.rake`. For example:

```ruby
INTEGRATION_TASKS = %w(
  jumpup:start
  db:migrate
  spec
  jumpup:finish
)
```

With that in place, you can execute a single task in order to integrate your code safely:

```
rake integrate
```

For more information, please have a look at the "[Integration Steps](#integration-steps)" section below.

## Plugins

* [jumpup-heroku][jumpup-heroku]
* [jumpup-hipchat][jumpup-hipchat]

## Dependencies

* Git
* [Rcov][rc] (Ruby 1.8) or [Simplecov][sc] (Ruby 1.9+) (optional)

## [ProTip] Using Simplecov

Using simplecov on your test suite will make your tests to run slower. You can fix it using an environment variable called "coverage" on test_helper.rb/spec_helper.rb to turn on/off the simplecov. See below:

spec_helper.rb or test_helper.rb

```ruby
if ENV['coverage'] == 'on'
  require 'simplecov'
  SimpleCov.start 'rails'
end
```

The "coverage" variable is set to "on" by the integration process. When running tests/specs while you're developing, simplecov doesn't run, unless you set "coverage" environment variable by hand.

## Integration Steps

Our integration process is composed of several rake tasks that are explained ahead. It's possible to skip one or more steps and add other steps of your own. This will be demonstrated shortly and this is the complete set of tasks we normally use:

| Rake Task | Description |
| --------- | ----------- |
| `git:status_check` | Check if all local files have been commited to the local git repository. |
| `log:clear`        | Remove log files. |
| `tmp:clear`        | Remove temporary files. |
| `git:pull`         | Update local files from the remote git repository. |
| `db:migrate`       | Execute any new database migration created by other team members since the last integration. |
| `test` or `spec`   | Set the rake task your test/spec suite needs to run. Use a command that generate the coverage files. |
| `git:push`         | Push your changes. If any of the previous tasks break, because one test failed, for instance, the script won't push. Actually this task runs only if every checking done before work well. |

Using this almost paranoid sequence of steps it will be hard to check in bad code in your repository, which is good, very good. The idea is that you should treat your repository as a sacred place, where only good code should ever enter.

### More examples

* Reckless programmer

  So you don't have tests, nor specs but you still want to use the jumpup. You might get away with this customized `lib/tasks/jumpup.rake`:

  ```ruby
  INTEGRATION_TASKS = %w(
    jumpup:start
    db:migrate
    jumpup:finish
  )
  ```

  The fact that you can get away with this doesn't mean you should. Don't you think it's already time to grow up and become more professional about software development? I know you believe you have a great excuse to avoid writing those tests or specs. Still it's just an excuse. Write tests or write specs and make a better world!

* Test conscious programmer

   You haven't jumped on the [BDD][BDD] bandwagon yet. Instead, you write tests, which is good, but they don't cover all of your code yet, which is bad. We believe you will improve it and make sure your tests cover 100% of your code. In the meantime you might need to skip coverage checkings. Oh, you also don't use [Selenium][sor]. Shame on you! Try this:

   ```ruby
   INTEGRATION_TASKS = %w(
     jumpup:start
     db:migrate
     test
     jumpup:finish
   )
   ```

* Spec infected programmer

  So you used to [TDD][TDD] all around but then someone told you that this is for gramma. The new wave has a name on it: [BDD][BDD]. So, of course, you now have specs covering 100% of your code and doesn't have any more tests. Great! Just change your test_helper.rb/spec_helper.rb with:

  ```ruby
  require 'simplecov'
  SimpleCov.start 'rails' do
    minimum_coverage 100
  end
  ```

## Versioning

Jumpup follows the [Semantic Versioning](http://semver.org/).

## Issues

If you have problems, please create a [Github Issue](https://github.com/Helabs/jumpup/issues).

## Contributing

Please see [CONTRIBUTING.md](https://github.com/Helabs/jumpup/blob/master/CONTRIBUTING.md) for details.

## Release

Follow this steps to release a new version of the gem.

1. Test if everything is running ok;
1. Change version of the gem on `VERSION` constant;
1. Add the release date on the `CHANGELOG`;
1. Do a commit "Bump version x.x.x", follow the semantic version;
1. Run `$ rake release`, this will send the gem to the rubygems;
1. Check if the gem is on the rubygems and the tags are correct on the github;

## License

This code is free to be used under the terms of the [MIT license][mit].

## Contact

Comments are welcome.

## Maintainers

- [Thiago Borges](https://github.com/thiagogabriel)
- [Mauro George](https://github.com/maurogeorge)

## Authors

Jumpup came from the idea of [integration](https://github.com/tapajos/integration). Thanks to [Improve It][ii] and the original authors:

* [Marcos Tapajós][mt]
* [Sylvestre Mergulhão][sm]
* [Vinícius Teles][vt]

## Made with love by HE:labs

![HE:labs](http://helabs.com.br/images/logo.png)

This gem was created and is maintained by [HE:labs](https://github.com/Helabs).


[gem_version_badge]: https://badge.fury.io/rb/jumpup.png
[ruby_gems]: http://rubygems.org/gems/jumpup
[mt]:    https://github.com/tapajos
[sm]:   https://github.com/mergulhao
[vt]:    http://www.improveit.com.br/vinicius
[rc]:    http://eigenclass.org/hiki.rb?rcov
[sc]:    https://github.com/colszowka/simplecov
[sor]:  http://selenium-on-rails.openqa.org
[rs]:    http://rspec.info
[ror]:  http://www.rubyonrails.org
[sci]:  http://jamesshore.com/Blog/Why%20I%20Dont%20Like%20CruiseControl.html
[mit]:  http://www.opensource.org/licenses/mit-license.php
[ci]:   http://martinfowler.com/articles/continuousIntegration.html
[travis]: http://travis-ci.org
[BDD]:  http://en.wikipedia.org/wiki/Behavior_driven_development
[TDD]:  http://en.wikipedia.org/wiki/Test-driven_development
[ii]:   http://www.improveit.com.br
[helabs]: http://helabs.com.br/en/
[jumpup-heroku]: https://github.com/Helabs/jumpup-heroku
[jumpup-hipchat]: https://github.com/Helabs/jumpup-hipchat
